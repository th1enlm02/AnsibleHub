---
- name: Check if /etc/hosts has the members infor
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items:
    - "# Mongodb Replica Sets"
  register: hosts_line

- name: Add the members to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items:
    - "{{ mongodb_primary_ipv4 }} {{ mongodb_primary_host }}"
    - "{{ mongodb_secondary_ipv4 }} {{ mongodb_secondary_host }}"
    - "{{ mongodb_arbiter_ipv4 }} {{ mongodb_arbiter_host }}"
  when: hosts_line is changed

- name: Change default ip binding
  ansible.builtin.lineinfile:
    path: "{{ mongodb_config_file }}"
    search_string: 'bindIp:'
    line: '  bindIp: 0.0.0.0'

- name: Open Replication section
  ansible.builtin.lineinfile:
    path: "{{ mongodb_config_file }}"
    regexp: '^#replication:'
    line: 'replication:'

- name: Add replica set name
  ansible.builtin.lineinfile:
    path: "{{ mongodb_config_file }}"
    insertafter: '^replication:'
    line: '  replSetName: "{{ mongodb_replica_set }}"'

- name: Create arbiter folder
  ansible.builtin.file:
    path: "{{ mongodb_arbiter_config_folder }}"
    state: directory
  when: ansible_host == mongodb_arbiter_ipv4

- name: Add arbiter configuration
  ansible.builtin.lineinfile:
    path: "{{ mongodb_config_file }}"
    regexp: '^  dbPath:'
    line: '  dbPath: {{ mongodb_arbiter_config_folder }}'
  when: ansible_host == mongodb_arbiter_ipv4

- name: Set permissions for arbiter folder
  ansible.builtin.file:
    path: "{{ mongodb_arbiter_config_folder }}"
    owner: mongodb
    group: mongodb
    mode: '0755'
  when: ansible_host == mongodb_arbiter_ipv4

- name: Restart MongoDB service
  ansible.builtin.systemd:
    name: mongod
    state: restarted

- name: Configure MongoDB replica set
  community.mongodb.mongodb_replicaset:
    replica_set: "{{ mongodb_replica_set }}"
    members:
      - host: "{{ mongodb_primary_host }}:{{ mongodb_port }}"
        priority: 2
      - host: "{{ mongodb_secondary_host }}:{{ mongodb_port }}"
        priority: 1
      - host: "{{ mongodb_arbiter_host }}:{{ mongodb_port }}"
    arbiter_at_index: 2
  when: ansible_host == mongodb_primary_ipv4
  register: replica_set
  failed_when: replica_set.changed == false
  ignore_errors: false

- name: Debug replica set
  ansible.builtin.debug:
    var: replica_set

- name: Wait for MongoDB replica set to be configured
  ansible.builtin.shell: |
    mongo --eval "rs.status()" | grep -q "PRIMARY"
  retries: 10
  delay: 10
  when: replica_set.changed and ansible_host == mongodb_primary_ipv4
  register: rs_status
  until: rs_status.failed == false
  ignore_errors: true

- name: Debug rs_status
  ansible.builtin.debug:
    var: rs_status
